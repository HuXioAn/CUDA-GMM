#ifndef CUDAGMM_HU
#define CUDAGMM_HU

#include <stdlib.h>

__global__ void kernCalcLogLikelihoodAndGammaNK(
	const size_t M, const size_t numPoints, const size_t numComponents,
	const double* logpi, double* logPx, double* loggamma
);

__host__ double cudaGmmLogLikelihoodAndGammaNK(
	cudaDeviceProp* deviceProp,
	const size_t numPoints, const size_t numComponents,
	const size_t M,
	const double* logpi, double* logP,
	const double* device_logpi, double* device_logP
);



__global__ void kernCalcMu(
	const size_t numPoints, const size_t pointDim,
	const double* X, const double* loggamma, const double logGammaK,
	double* dest
);

__host__ void cudaUpdateMu(
	cudaDeviceProp* deviceProp,
	const size_t numPoints, const size_t pointDim,
	const size_t M,
	const double* X, const double* loggamma, const double logGammaK,
	const double* device_X, const double* device_loggamma,
	double* mu
);



__global__ void kernCalcSigma(
	const size_t numPoints, const size_t pointDim,
	const double* X, const double* mu, const double* loggamma, const double logGammaK,
	double* dest
);
	
__host__ void cudaUpdateSigma(
	cudaDeviceProp* deviceProp,
	const size_t numPoints, const size_t pointDim,
	const size_t M,
	const double* X, const double* loggamma, const double logGammaK,
	const double* device_X, const double* device_loggamma,
	double* mu, 
	double* sigma
);

#endif
