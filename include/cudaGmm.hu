#ifndef CUDAGMM_HU
#define CUDAGMM_HU

#include <stdlib.h>

__global__ void kernCalcLogLikelihoodAndGammaNK(
	const size_t M, const size_t numPoints, const size_t numComponents,
	const double* logpi, double* logPx, double* loggamma
);

__host__ double cudaGmmLogLikelihoodAndGammaNK(
	cudaDeviceProp* deviceProp,
	const size_t numPoints, const size_t numComponents,
	const size_t M,
	const double* logpi, double* logP,
	const double* device_logpi, double* device_logP
);

__global__ void kernExp(double* A, double* bias);

__global__ void kernBiasAndLog(double* sumexp, double* bias); 

__host__ void cudaLogSumExp(
	cudaDeviceProp* deviceProp, dim3 grid, dim3 block, 
	const size_t numPoints,
	double* device_src, double* device_dest, 
	double* device_working, 
	cudaStream_t stream
);

__global__ void kernCalcMu(
	const size_t numPoints, const size_t pointDim,
	const double* X, const double* loggamma, const double* logGammaK,
	double* dest
);

__global__ void kernCalcSigma(
	const size_t numPoints, const size_t pointDim,
	const double* X, const double* mu, const double* loggamma, const double* logGammaK,
	double* dest
);

__global__ void kernPrepareCovariances(
	const size_t numComponents, const size_t pointDim,
	double* Sigma, double* SigmaL,
	double* normalizers
);

__global__ void kernUpdatePi(
	const size_t numPoints, const size_t numComponents,
	double* logpi, double* logGamma
);

#endif
