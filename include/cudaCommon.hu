#ifndef CUDAKERNALS_H
#define CUDAKERNALS_H

#define check(call) { cudaError_t __ABC123 = call; if(__ABC123 != cudaSuccess) { printf("%s:%d\t%s: %s\n", __FILE__, __LINE__, #call, cudaGetErrorString(__ABC123)); } assert(__ABC123 == cudaSuccess); }

#include <stdlib.h>

__host__ void assertPowerOfTwo(size_t N);

__host__ void calcDim(int N, cudaDeviceProp* devProp, dim3* block, dim3* grid);

__host__ void dimToConsole(dim3* block, dim3* grid);

__host__ double* mallocOnGpu(const size_t N);
 
__host__ double* sendToGpu(const size_t N, const double* A);


__global__ void kernArraySum(int N, double* dest, double* src);

__global__ void kernReduceBlocks(double* dest);

__host__ double cudaReduceSum(cudaDeviceProp* deviceProp, const size_t N, double* device_A);

#endif
